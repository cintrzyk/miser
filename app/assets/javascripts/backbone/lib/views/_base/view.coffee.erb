@Miser.module 'Views', (Views, App, Backbone, Marionette, $, _) ->

  _.extend Marionette.View::,

    addOpacityWrapper: (init = true) ->
      @$el.toggleWrapper
        className: 'opacity'
      , init

    templateHelpers: ->
      current_user:
        App.request('get:current_user')?.toJSON()

      render_partial: (template, data = @) ->
        return if template is false
        path = @__getTemplate template
        throw "Template #{template} not found!" unless path
        path data

      assets: (source) ->
        @__url source

      __assets: ->
        <% ApplicationHelper.images.each do |img| %>
          "<%= img %>" : "<%= image_url(img) %>",
        <% end %>

      __url: (path) ->
        if @__assets()[path]
          @__assets()[path]
        else
          path

      __getTemplate: (template) ->
        for lookup in ['backbone/apps/', 'backbone/lib/concerns/']
          for path in [template, @__withTemplate template]
            return JST[lookup + path] if JST[lookup + path]

      __withTemplate: (string) ->
        array = string.split '/'
        array.splice -1, 0, 'templates'
        array.join '/'
